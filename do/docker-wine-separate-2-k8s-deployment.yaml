apiVersion: apps/v1 
kind: Deployment
metadata:
  name: "default-docker-wine"
  labels:
    app: "default-docker-wine"
    client: "default"
spec:
  replicas: 1
  selector:
    matchLabels:
        app: "default-docker-wine"
        client: "default"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: "default-docker-wine"
        client: "default"
    spec:
      securityContext:
        fsGroup: 1010
      containers:
      - name: "default-solarkennedy"
        image: launchthatbrand/solarkennedy-wine-x11-novnc-docker:release-1.0.13
        securityContext:
          runAsUser: 0
      - name: "default-nevmerzhitsky"
        image: launchthatbrand/nevmerzhitsky-headless-metatrader4:elease-1.0.11
        # command: [ "/bin/bash", "-c", "--" ]
        # args: [ "while true; do sleep 30; done;" ]
        # need poststart to copy files from DockerFile path into pvc path. cant run chmod here as it needs root.
        #lifecycle:
        #  postStart:
        #    exec:
        #      command: 
        #        - "/bin/sh"
        #        - "-c"
        #        - >
        #          if [ ! -f /home/winer/.wine/drive_c/mt4/terminal.exe ]; then
        #          mkdir -p /home/winer/.wine/drive_c/mt4;
        #          cp -R /home/winer/.cache/mt4_kot4x/* /home/winer/.wine/drive_c/mt4/;
        #          fi;
        #          if [ ! -f /home/winer/.wine/drive_c/windows/Fonts/wingding.ttf ]; then
        #          mkdir -p /home/winer/.wine/drive_c/windows/Fonts;
        #          cp -R /home/winer/.cache/fonts/* /home/winer/.wine/drive_c/windows/Fonts;
        #          fi;
        #          winetricks settings fontsmooth=rgb;
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "250Mi"
            cpu: "300m"
        env:
        - name: RDP_SERVER
          value: "yes"
        - name: USER_NAME
          value: default
        - name: USER_PASSWD
          value: default
        - name: SCREEN_WHD
          value: 1600x900x24
        volumeMounts:
        - name: default-docker-wine
          mountPath: /home/winer/.wine/
      - name: "default-gitsync"
        image: k8s.gcr.io/git-sync:v3.0.1
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "100Mi"
            cpu: "100m"
        securityContext:
          runAsUser: 1000
        env:
        - name: GIT_SYNC_REPO
          value: https://github.com/launchthatbrand/mt4_filesystem.git
        - name: GIT_SYNC_BRANCH
          value: "lvrg-type_m"
        - name: GIT_SYNC_ROOT
          value: /home/winer/.wine/drive_c/
        - name: GIT_SYNC_DEST
          value: mt4
        - name: GIT_SYNC_ADD_USER
          value: 1000:1010
        - name: GIT_SYNC_PERMISSIONS
          value: 1000:1010
        - name: GIT_SYNC_WAIT
          value: "3600"
        #- name: GIT_SYNC_USERNAME
        #  value: launchthatbrand
        #- name: GIT_SYNC_PASSWORD
        #  value: 8S9me^fQ6c
        volumeMounts:
        - name: default-docker-wine
          mountPath: /home/winer/.wine/
      initContainers:
      # need init container to run chown command as root. Cant use postStart as then everything would need to run as root.
      - name: init-busybox
        image: busybox
        command: ['sh', '-c', 'mkdir -p /home/winer/.wine/drive_c; chown -R 1000:1010 /home/winer/; echo The app is running!']
        # command: ['sh', '-c', 'while true; do sleep 30; done;']
        volumeMounts:
        - name: default-docker-wine
          mountPath: /home/winer/.wine/
      #nodeSelector:
      #  node.kubernetes.io/instance-type: $instancetype
      imagePullSecrets:
      - name: regcred
      volumes:
      - name: default-docker-wine
        persistentVolumeClaim:
          claimName: default-docker-wine
        