apiVersion: apps/v1 
kind: Deployment
metadata:
  name: "$Username-$random-docker-wine"
  labels:
    app: "$Username-$random-docker-wine"
    client: "$Username-$random"
spec:
  replicas: 1
  selector:
    matchLabels:
        app: "$Username-$random-docker-wine"
        client: "$Username-$random"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: "$Username-$random-docker-wine"
        client: "$Username-$random"
    spec:
      securityContext:
        fsGroup: 1010
      containers:
      - name: "$Username-$random-solarkennedy"
        image: launchthatbrand/solarkennedy-wine-x11-novnc-docker:release-1.0.13
        securityContext:
          runAsUser: 0
      - name: "$Username-$random-nevmerzhitsky"
        image: launchthatbrand/nevmerzhitsky-headless-metatrader4:elease-1.0.10
        #command: [ "/bin/bash", "-c", "--" ]
        #args: [ "while true; do sleep 30; done;" ]
        # need poststart to copy files from DockerFile path into pvc path. cant run chmod here as it needs root.
        lifecycle:
          postStart:
            exec:
              command: 
                - "/bin/sh"
                - "-c"
                - >
                  if [ ! -f /home/winer/.wine/drive_c/mt4/terminal.exe ]; then
                  mkdir -p /home/winer/.wine/drive_c/mt4;
                  cp -R /home/winer/.cache/mt4_kot4x/* /home/winer/.wine/drive_c/mt4/;
                  fi;
                  if [ ! -f /home/winer/.wine/drive_c/windows/Fonts/wingding.ttf ]; then
                  mkdir -p /home/winer/.wine/drive_c/windows/Fonts;
                  cp -R /home/winer/.cache/fonts/* /home/winer/.wine/drive_c/windows/Fonts;
                  fi;
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "${MEM}Gi"
            cpu: "${CPU}m"
        env:
        - name: RDP_SERVER
          value: "yes"
        - name: USER_NAME
          value: $Username
        - name: USER_PASSWD
          value: $Password
        - name: SCREEN_WHD
          value: 1600x900x24
        volumeMounts:
        - name: $Username-docker-wine
          mountPath: /home/winer/.wine/
      initContainers:
      # need init container to run chown command as root. Cant use postStart as then everything would need to run as root.
      - name: init-myservice
        image: busybox
        command: ['sh', '-c', 'chown -R 1000:1010 /home/winer/; echo The app is running!']
        #command: ['sh', '-c', 'while true; do sleep 30; done;']
        volumeMounts:
        - name: $Username-docker-wine
          mountPath: /home/winer/.wine/
      nodeSelector:
        node.kubernetes.io/instance-type: $instancetype
      imagePullSecrets:
      - name: regcred
      volumes:
      - name: $Username-docker-wine
        persistentVolumeClaim:
          claimName: $Username-docker-wine
        